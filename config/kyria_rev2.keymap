/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

// Layers
#define DEFAULT 0
#define QWER    1
#define NAV     2
#define NUM     3
#define NUMPAD  4

// DE keys
#define DE_PLUS &kp RBKT
#define DE_TILD &kp RA(RBKT)
#define DE_LABK &kp NON_US_BACKSLASH // <
#define DE_RABK &kp LS(NON_US_BACKSLASH) // >
#define DE_PIPE &kp RA(NON_US_BACKSLASH)
#define DE_MINS &kp SLASH
#define DE_UE   &kp LBKT
#define DE_OE   &kp SEMI
#define DE_AE   &kp APOS
#define DE_SS   &kp MINUS
#define DE_QUES &kp LS(MINUS)
#define DE_HASH &kp NON_US_HASH
#define DE_QUOT &kp LS(NON_US_HASH)
#define DE_DQUO &kp LS(N2)
#define DE_EQUL &kp LS(N0)
#define DE_BSLS &kp RA(MINUS)
#define DE_SLSH &kp LS(N7)
#define DE_LCBR &kp RA(N7)
#define DE_RCBR &kp RA(N0)
#define DE_LPRN &kp LS(N8)
#define DE_RPRN &kp LS(N9)
#define DE_LBRC &kp RA(N8)
#define DE_RBRC &kp RA(N9)

// Special shortcuts
#define ________   &trans
#define TODO       &trans
#define DEL_W      &kp LC(BSPC)
#define SPACE_NUM  &lt NUM SPACE

#define BT_1       &bt BT_SEL 0
#define BT_2       &bt BT_SEL 1
#define BT_3       &bt BT_SEL 2
#define BT_4       &bt BT_SEL 3
#define BT_5       &bt BT_SEL 4
#define BT_CLEAR   &bt BT_CLR

#define UG_TOG     &rgb_ug RGB_TOG
#define UG_NEXT    &rgb_ug RGB_EFF
#define UG_BRGHT   &rgb_ug RGB_BRI
#define UG_DARK    &rgb_ug RGB_BRD
#define UG_LILA    &rgb_ug RGB_COLOR_HSB(282, 100, 83)

// home row mod left
#define ALT_S &hm LALT S
#define ALT_R &hm LALT R
#define ALT_3 &hm LALT N3
#define CTL_D &hm LCTRL D
#define CTL_I &hm LCTRL I
#define CTL_4 &hm LCTRL N4
#define SFT_F &hm LSHIFT F
#define SFT_E &hm LSHIFT E
#define SFT_5 &hm LSHIFT N5

// home row mod right
#define SFT_8 &hm RSHIFT N8
#define SFT_J &hm RSHIFT J
#define SFT_N &hm RSHIFT N
#define CTL_K &hm RCTRL K
#define CTL_T &hm RCTRL T
#define CTL_9 &hm RCTRL N9
#define ALT_L &hm RALT L
#define RALT_S &hm RALT S
#define ALT_0 &hm RALT N0

// special modifiers for missing keys
#define SFT_SS &hm LSHIFT MINUS
#define SFT_MIN &hm RSHIFT SLASH


#define CTRL_DEL &hm RCTRL BSPC

/ {

    macros {
            ZMK_MACRO(go_src,
                wait-ms = <30>;
                tap-ms = <40>;
                bindings
                    = <&macro_press   &kp LALT>
                    , <&macro_tap     &kp F1>
                    , <&macro_release &kp LALT>
                    , <&macro_wait_time 2000>
                    , <&macro_tap     &kp RET>
                    ;
            )

            ZMK_MACRO(run,
                wait-ms = <30>;
                tap-ms = <40>;
                bindings
                    = <&macro_press   &kp LALT>
                    , <&macro_press   &kp LSHFT>
                    , <&macro_tap     &kp F10>
                    , <&macro_release &kp LSHFT>
                    , <&macro_release &kp LALT>
                    ;
            )

	    ZMK_MACRO(cad,
                wait-ms = <30>;
                tap-ms = <40>;
                bindings
                    = <&macro_press   &kp LCTL>
                    , <&macro_press   &kp LALT>
                    , <&macro_tap     &kp DEL>
                    , <&macro_release &kp LALT>
                    , <&macro_release &kp LCTL>
                    ;
            )
    };

    behaviors {
        hm: homerow_mods {
                    compatible = "zmk,behavior-hold-tap";
                    label = "HOMEROW_MODS";
                    #binding-cells = <2>;
                    tapping-term-ms = <180>;
                    quick-tap-ms = <0>;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
                };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
        // --------------------------------------------------------------------------------------------------------
        // | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
        // | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
        // | ---  | --- | --- | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- | --- | --- | --- |
        //                    | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- |
                    bindings = <
            &kp TAB   &kp J &kp L &kp U    &kp A    &kp Q                                                &kp W    &kp B    &kp D     &kp G   &kp Z    &kp Y
            &mo NAV   &kp C ALT_R CTL_I    SFT_E    &kp O                                                &kp M    SFT_N    CTL_T     RALT_S  &kp H    &kp RET
            SFT_SS    &kp V &kp X DE_UE    DE_AE    DE_OE    &mo NUMPAD &kp CAPS      ________  DE_PIPE  &kp P    &kp F    &kp COMMA &kp DOT &kp K    SFT_MIN
                                  &kp LGUI &kp LALT &kp LCTL SPACE_NUM  &kp SPACE     &kp BSPC  SPACE_NUM DEL_W   &kp RALT DE_PLUS
                    >;

                    sensor-bindings = <&inc_dec_kp ________ ________ &inc_dec_kp PG_UP PG_DN>;
                };

		qwert_layer {
// --------------------------------------------------------------------------------------------------------
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- | --- | --- | --- |
//                    | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- |
			bindings = <
	&kp TAB   &kp Q &kp W &kp E    &kp R    &kp T                                                 &kp Y    &kp U    &kp I     &kp O   &kp P    &kp BSPC
	&mo NAV   &kp A ALT_S CTL_D    SFT_F    &kp G                                                 &kp H    SFT_J    CTL_K     ALT_L   DE_PLUS  &kp RET
	SFT_SS    &kp Z &kp X &kp C    &kp V    &kp B    &mo NUMPAD &kp CAPS      ________  DE_PIPE   &kp N    &kp M    &kp COMMA &kp DOT DE_MINS  SFT_MIN
	                      &kp LGUI &kp LALT &kp LCTL SPACE_NUM  &kp SPACE     &kp BSPC  SPACE_NUM DEL_W    &kp RALT &kp K_APP
			>;

			sensor-bindings = <&inc_dec_kp ________ ________ &inc_dec_kp PG_UP PG_DN>;
		};

		nav_layer {
// --------------------------------------------------------------------------------------------------------
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- | --- | --- | --- |
//                    | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- |
			bindings = <
	&kp ESC  &go_src  &run     ________ DE_LCBR  DE_RCBR                                         ________ DE_MINS  &kp UP   DE_SS     DE_QUES  &kp DEL
	________ DE_AE    DE_SS    ________ DE_LPRN  DE_RPRN                                         ________ &kp LEFT &kp DOWN &kp RIGHT DE_HASH  ________
	________ ________ ________ ________ DE_LBRC  DE_RBRC  ________ ________    ________   ________ &kp HOME &kp END  DE_QUOT  DE_DQUO   DE_EQUL   DE_TILD
	                           ________ ________ ________ DE_LABK  DE_RABK     &kp DEL    ________ DE_BSLS  DE_SLSH  &kp C_MUTE
			>;

			sensor-bindings = <&inc_dec_kp ________ ________ &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};


		num_layer {
// --------------------------------------------------------------------------------------------------------
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- | --- | --- | --- |
//                    | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- |
			bindings = <
	&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp F6                                          &kp F7   &kp F8   &kp F9   &kp F10  &kp F11  &kp BSPC
	&kp N1   &kp N2   ALT_3    CTL_4    SFT_5    &kp N6                                          &kp N7   SFT_8    CTL_9    ALT_0    ________ ________
	________ ________ ________ ________ ________ ________ UG_DARK  UG_BRGHT    UG_NEXT  UG_TOG   UG_LILA  ________ &kp COMMA &kp DOT ________ ________
	                           ________ ________ ________ ________ ________    ________ ________ ________ ________ &kp C_PLAY
			>;

			sensor-bindings = <&inc_dec_kp ________ ________ &inc_dec_kp C_PREV C_NEXT>;
		};

        numpad_layer {
// --------------------------------------------------------------------------------------------------------
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- | --- | --- | --- |
//                    | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- |
            bindings = <
    ________ ________ ________ ________ ________ ________                                          &kp KP_DIVIDE   &kp N7   &kp N8   &kp N9   &kp KP_MINUS &kp BSPC
    ________ ________ ________ ________ ________ ________                                          &kp KP_MULTIPLY &kp N4   &kp N5   &kp N6   &kp KP_PLUS  ________
    ________ ________ ________ ________ ________ ________ ________  BT_CLEAR    BT_1      BT_2     ________        &kp N1   &kp N2   &kp N3   &kp DOT      &kp KP_EQUAL
                               ________ ________ ________ &tog QWER BT_5        BT_3      BT_4     &kp N0          ________ ________
            >;

            sensor-bindings = <&inc_dec_kp ________ ________ &inc_dec_kp C_PREV C_NEXT>;
        };

	};
};