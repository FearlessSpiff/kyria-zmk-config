/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#include "keymap_german.h"

// Layers
#define DEFAULT 0
#define NAV     1
#define SYM     2
#define NUM     3
#define NUMPAD  4

// Special shortcuts
#define ________   &trans
#define TODO       &trans
#define DEL_W      &kp LC(BSPC)
#define SPACE_NUM  &lt NUM SPACE
#define SPACE_SYM  &lt SYM SPACE
#define C_SYM  &lt SYM C
#define H_SYM  &lt SYM H

#define BT_1       &bt BT_SEL 0
#define BT_2       &bt BT_SEL 1
#define BT_3       &bt BT_SEL 2
#define BT_4       &bt BT_SEL 3
#define BT_5       &bt BT_SEL 4
#define BT_CLEAR   &bt BT_CLR

#define UG_TOG     &rgb_ug RGB_TOG
#define UG_NEXT    &rgb_ug RGB_EFF
#define UG_BRGHT   &rgb_ug RGB_BRI
#define UG_DARK    &rgb_ug RGB_BRD
#define UG_LILA    &rgb_ug RGB_COLOR_HSB(282, 100, 83)

// home row mod left
#define ALT_S &hm LALT S
#define ALT_R &hm LALT R
#define ALT_3 &hm LALT N3
#define CTL_D &hm LCTRL D
#define CTL_I &hm LCTRL I
#define CTL_4 &hm LCTRL N4
#define SFT_F &hm LSHIFT F
#define SFT_E &hm LSHIFT E
#define SFT_5 &hm LSHIFT N5

// home row mod right
#define SFT_8    &hm RSHIFT N8
#define SFT_J    &hm RSHIFT J
#define SFT_N    &hm RSHIFT N
#define SFT_LBRC &hm RSHIFT DE_LBRC
#define SFT_RPRN &hm RSHIFT DE_RPRN
#define CTL_K    &hm RCTRL K
#define CTL_T    &hm RCTRL T
#define CTL_9    &hm RCTRL N9
#define ALT_L    &hm RALT L
#define RALT_S   &hm RALT S
#define ALT_0    &hm RALT N0

// special modifiers for missing keys
#define SFT_SS &hm LSHIFT MINUS
#define SFT_MIN &hm RSHIFT SLASH


#define CTRL_DEL &hm RCTRL BSPC

/ {

    macros {
            ZMK_MACRO(go_src,
                wait-ms = <30>;
                tap-ms = <40>;
                bindings
                    = <&macro_press   &kp LALT>
                    , <&macro_tap     &kp F1>
                    , <&macro_release &kp LALT>
                    , <&macro_wait_time 2000>
                    , <&macro_tap     &kp RET>
                    ;
            )

            ZMK_MACRO(run,
                wait-ms = <30>;
                tap-ms = <40>;
                bindings
                    = <&macro_press   &kp LALT>
                    , <&macro_press   &kp LSHFT>
                    , <&macro_tap     &kp F10>
                    , <&macro_release &kp LSHFT>
                    , <&macro_release &kp LALT>
                    ;
            )

	    ZMK_MACRO(cad,
                wait-ms = <30>;
                tap-ms = <40>;
                bindings
                    = <&macro_press   &kp LCTL>
                    , <&macro_press   &kp LALT>
                    , <&macro_tap     &kp DEL>
                    , <&macro_release &kp LALT>
                    , <&macro_release &kp LCTL>
                    ;
            )
    };

    behaviors {
        hm: homerow_mods {
                    compatible = "zmk,behavior-hold-tap";
                    label = "HOMEROW_MODS";
                    #binding-cells = <2>;
                    tapping-term-ms = <180>;
                    quick-tap-ms = <0>;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
                };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// --------------------------------------------------------------------------------------------------------
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- | --- | --- | --- |
//                    | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- |
            bindings = <
    &kp TAB  &kp J  &kp L  &kp U        &kp A        &kp Q                                                            &kp W      &kp B     &kp D        &kp G    &kp DE_Y  &kp DE_Z
    &mo NAV  C_SYM  ALT_R  CTL_I        SFT_E        &kp O                                                            &kp M      SFT_N     CTL_T        RALT_S   H_SYM     &kp RET
    SFT_SS   &kp V  &kp X  &kp DE_UDIA  &kp DE_ADIA  &kp DE_ODIA  &mo NUMPAD  &kp CAPS         ________  &kp DE_PIPE  &kp P      &kp F     &kp COMMA    &kp DOT  &kp K     SFT_MIN
                           &kp LGUI     &kp LALT     &kp LSHFT    &kp LSHFT   &kp SPACE        &kp BSPC  SPACE_NUM    &kp LSHFT  &kp RALT  &kp DE_PLUS
             >;

                    sensor-bindings = <&inc_dec_kp ________ ________ &inc_dec_kp PG_UP PG_DN>;
        };



        nav_layer {
// --------------------------------------------------------------------------------------------------------
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- | --- | --- | --- |
//                    | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- |
			bindings = <
	&kp ESC   &go_src   &run      ________  &kp DE_LCBR  &kp DE_RCBR                                                      ________     &kp PG_DN    &kp UP       &kp PG_UP    &kp DE_QUES  &kp DEL
	________  ________  ________  ________  &kp DE_LPRN  &kp DE_RPRN                                                      ________     &kp LEFT     &kp DOWN     &kp RIGHT    &kp DE_HASH  ________
	________  ________  ________  ________  &kp DE_LBRC  &kp DE_RBRC  ________     ________           ________  ________  &kp HOME     &kp END      &kp DE_DQUO  &kp DE_QUOT  &kp DE_EQL   &kp DE_TILD
	                              ________  ________     ________     &kp DE_LABK  &kp DE_RABK        &kp DEL   ________  &kp DE_BSLS  &kp DE_SLSH  &kp C_MUTE
			>;

			sensor-bindings = <&inc_dec_kp ________ ________ &inc_dec_kp PG_UP PG_DN>;
		};



		sym_layer {
// --------------------------------------------------------------------------------------------------------
// | ---  |  ^  |  _  |  {  |  }  |  @  |                             |  !  |  <  |  >  |  =  |  &  | --- |
// | ---  |  \  |  /  |  (  |  )  |  *  |                             |  ?  |  [  |  ]  |  -  |  :  | --- |
// | ---  |  `  |  $  |  |  |  ~  |  #  | --- | --- |     | --- | --- |  +  |  %  |  "  |  '  |  ;  | --- |
//                    | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- |
			bindings = <
	________ &kp DE_CIRC  &kp DE_UNDS  &kp DE_LCBR  &kp DE_RCBR  &kp DE_AT                                                  &kp DE_EXLM  &kp DE_LABK  &kp DE_RABK  &kp DE_EQL   &kp DE_AMPR  ________
	________ &kp DE_BSLS  &kp DE_SLSH  &kp DE_LPRN  SFT_RPRN     &kp DE_ASTR                                                &kp DE_QUES  SFT_LBRC     &kp DE_RBRC  &kp DE_MINS  &kp DE_COLN  ________
	________ &kp DE_ACUT  &kp DE_DLR   &kp DE_PIPE  &kp DE_TILD  &kp DE_HASH  ________  ________        ________  ________  &kp DE_PLUS  &kp DE_PERC  &kp DE_DQUO  &kp DE_QUOT  &kp DE_SCLN  ________
	                                   ________     ________     ________     ________  ________        ________  ________  ________     ________      ________
			>;

			sensor-bindings = <&inc_dec_kp ________ ________ &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};



		num_layer {
// --------------------------------------------------------------------------------------------------------
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- | --- | --- | --- |
//                    | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- |
			bindings = <
	&kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6                                                &kp F7     &kp F8    &kp F9      &kp F10  &kp F11   &kp BSPC
	&kp N1    &kp N2    ALT_3     CTL_4     SFT_5     &kp N6                                                &kp N7     SFT_8     CTL_9       ALT_0    ________  ________
	________  ________  ________  ________  ________  ________  UG_DARK  UG_BRGHT        UG_NEXT   UG_TOG   UG_LILA    ________  &kp COMMA   &kp DOT  ________  ________
	                              ________  ________  ________  ________  ________       ________  ________  ________  ________  &kp C_PLAY
			>;

			sensor-bindings = <&inc_dec_kp ________ ________ &inc_dec_kp C_PREV C_NEXT>;
		};



        numpad_layer {
// --------------------------------------------------------------------------------------------------------
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- |                             | --- | --- | --- | --- | --- | --- |
// | ---  | --- | --- | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- | --- | --- | --- |
//                    | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- |
            bindings = <
    ________  ________  ________  ________  ________  ________                                        &kp KP_DIVIDE    &kp N7    &kp N8    &kp N9   &kp KP_MINUS  &kp BSPC
    ________  ________  ________  ________  ________  ________                                        &kp KP_MULTIPLY  &kp N4    &kp N5    &kp N6   &kp KP_PLUS   ________
    ________  ________  ________  ________  ________  ________  ________  BT_CLEAR        BT_1  BT_2  ________         &kp N1    &kp N2    &kp N3   &kp DOT       &kp KP_EQUAL
                                  ________  ________  ________  ________  BT_5            BT_3  BT_4  &kp N0           ________  ________
            >;

            sensor-bindings = <&inc_dec_kp ________ ________ &inc_dec_kp C_PREV C_NEXT>;
        };

	};
};